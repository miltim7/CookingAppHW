@model IEnumerable<Recipe>

@{
    ViewData["Title"] = "My Recipes";
    bool isAdmin = this.User.IsInRole("Admin");
}

@if (isAdmin)
{
    <a href="/Recipes/Create" class="create-recipe">Create New Recipe</a>
}
else
{
    <a href="/Bucket/Create" class="create-recipe">Create New Recipe</a>
}

@if (!Model.Any())
{
    <div class="text-center">
        <h1 style="margin-top: 300px; font-weight: 100;">There is no your recipes!</h1>
    </div>
}
else
{
    <ul class="recipe-ul">
        @foreach (var recipe in Model)
        {
            <div class="recipe-div">
                @{
                    string image = $"{recipe.Id}.png";
                }
                
                <div class="recipe-image" class="mt-3"><a href="/Recipes/Details?id=@recipe.Id"><img src="~/images/recipes/@image" class="img-fluid"></a></div>
                <div class="title">
                    <li>@recipe.Title</li>
                    <li class="price">@recipe.Price$</li>
                </div>
                <div>
                    <a href="/Recipes/MyEdit?id=@recipe.Id" class="edit"><i class="material-icons">edit</i></a>
                    <a class="delete" onclick="deleteRecipe(@recipe.Id)"><i class="material-icons">delete</i></a>
                </div>
            </div>
        }
    </ul>
}

<script>
    async function deleteRecipe(id) {
        await fetch('/Recipes/Delete/' + id,
            {
                method: 'DELETE'
            }).then(() => location.reload());
    }
</script>